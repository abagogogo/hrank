#!/bin/python3

def maxSubsetSum(arr):
    n = len(arr)
    if n < 1: return 0    
    dp = [0] * n
    dp[0] = max(0, arr[0])    
    for i in range(1, n):
        dp[i] = max(dp[i-2] + arr[i], dp[i-1])
    return dp[n-1]

// C++
int maxSubsetSum(vector<int> arr) {
    int n = arr.size();
    if (n == 0) return 0;
    vector<int> dp(n, 0);
    dp[0] = max(arr[0], 0);
    if (n> 1) dp[1] = max(arr[1], dp[0]);
    for (int i = 2; i < n; ++i)
        dp[i] = max(dp[i - 1], dp[i - 2] + arr[i]);
    return dp[n - 1];
}
